name: CI/CD - Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: docker-test
  K8S_NAMESPACE: test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run unit tests
        run: |
          go test ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Docker Desktop Kubernetes
        run: |
          docker run -d --name kind-control-plane --privileged -p 6443:6443 kindest/node:v1.21.1
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          
      - name: Wait for Kubernetes API
        run: |
          timeout 60s bash -c 'while ! kubectl get nodes; do sleep 2; done'
        
      - name: Update image tag in manifest
        run: |
          sed -i "s|ashwinjoeoffl/docker-test:latest|${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}|" k8s/manifests.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl create namespace test --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f k8s/manifests.yaml --validate=false
          kubectl rollout status deployment/docker-test -n test

      - name: Clean up
        if: always()
        run: rm -f ./main || true
