name: CI - build & push Docker image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run unit tests
        run: |
          go test ./...

      - name: Install golangci-lint
        run: |
          # install golangci-lint to the default GOPATH/bin
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.59.0
          golangci-lint --version

      - name: Run linter
        run: |
          golangci-lint run

      - name: Build (local binary)
        run: |
          go build -v -o main ./...


      - name: Log in to GHCR (GitHub Container Registry)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Optionally log in to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image (GHCR + optional Docker Hub)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/docker-test:latest
            ghcr.io/${{ github.repository_owner }}/docker-test:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/docker-test:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/docker-test:${{ github.sha }}
          # allow pushing to multiple registries
          # the optional Docker Hub tags will be skipped if secrets are not set

      - name: Image info
        run: |
          echo "Image pushed: ${{ secrets.DOCKERHUB_USERNAME }}/docker-test:latest"

      - name: Cleanup local binary
        if: always()
        run: rm -f ./main || true
